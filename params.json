{"name":"Dci-lab","tagline":"experiments using DCI (Data-Context-Interaction)","body":"dci-lab\r\n=======\r\n\r\nDCI (Data-Context-Interaction) in PHP\r\n\r\nMore info about DCI: http://fulloo.info/Documents/\r\nmailinglist: https://groups.google.com/forum/#!forum/object-composition\r\n\r\nhp-experiments\r\n--------------\r\nMy own experiments using contexts, roles and roleplayers in PHP. Please see the README.md in that subdirectory.\r\n\r\nphp-dci-libs\r\n------------\r\nSome other implementations of DCI in PHP:\r\n\r\n* **Fatty**: originally for Laravel. Uses closure object binding (in PHP 5.4). See http://kirkbushell.me/data-context-interaction-for-php/. Code on https://github.com/kirkbushell/fatty.\r\n* **CoreDCI**: can be used in PHP 5.3 (no traits). A method-injection PHP-implementation from 2010 using naming conventions like r *Rolename* Actions-classes. Used in http://code.google.com/p/waxphp/. See http://code.google.com/p/php-coredci/wiki/UsingCoreDCI\r\n* the \"**reverse wrapper**\" (object wraps the role rather than the role wrapping the object), which also results in methods of a role being injected in a data object (with examples in PHP 5.3 and using traits). See https://github.com/mbrowne/dci-php. Discussion: https://groups.google.com/d/msg/object-composition/YDKfrGuLXDo/pRirNWtks4oJ\r\n* Risto's **DCI-V** lib from 2010: https://gitorious.org/php-dciv/php-dciv\r\n\r\nHerman Peeren\r\n\r\nlast modified 2013-12-30\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}